<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Zobrazení obrázků</title>
    <link rel="icon" type="image/x-icon" href="https://upload.wikimedia.org/wikipedia/en/2/2d/Rei_II.jpg ">
    <style>
        .topnav {
            background-color: #000000;
            overflow: hidden;
            width: 100%;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000; 
        }

        .topnav a {
            color: #f2f2f2;
            float: left;
            font-size: 17px;
            padding: 14px 16px;
            text-align: center;
            text-decoration: none;
        }

        .topnav a:hover {
            background-color: #ddd;
            color: black;
        }

        .topnav a.active {
            background-color: #6331c0;
            color: white;
        }

        body {
            background-image: url("https://wallpapercave.com/wp/wp5865040.jpg");
            background-attachment: fixed;
            background-repeat: no-repeat;
            background-size: 100%, 100%;
            font-family: Arial, sans-serif;
            background-color: black;
            margin-top: 60px; /* Adjust this margin based on your topnav height */
        }

        .image-container {
            display: flex;
            flex-direction: column; /* This line ensures items are stacked vertically */
            gap: 20px; /* Creates space between items */
            flex-wrap: wrap;
            justify-content: center;
            align-items: flex-start; /* Align items to the start of the container */
            padding: 20px; /* Add padding to the container */
            align-items: center;
        }

        .image {
            margin: 10px;
            text-align: center;
        }

        .image img {
            width: 100%; /* Make images fill the container width */
            height: auto;
            display: block; /* Ensure images do not have extra space beneath them */
            max-width: 400px; /* Or any other desired maximum width */
        }
        .like-button {
  width: 60px;
  height: 40px;
  border-radius: 20px;
  background-color: #ccc;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative;
}

.like-button {
  width: 60px;
  height: 40px;
  border-radius: 20px;
  background-color: #ccc;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative;
  z-index: 999;
}

.like-button.liked {
  background-color: rgba(160, 0, 0, 0.575);
}

#like-counter {
  color: white;
  font-weight: bold;
  margin-right: 5px;
  line-height: 40px; /* Added to vertically align the number */
}

.heart-icon {
  position: absolute;
  right: 10px;
  bottom: 8px;
  font-size: 20px;
  color: rgb(255, 57, 57);
}


.like-button.liked .heart-icon {
  display: block;
}
    </style>
</head>

<script type="text/javascript">
    alert("Majitelé stránky neručí za obsah nahrávaný uživateli. Jinými slovy, neneseme odpovědnost za obsah galerie!!!");
</script>

<body>
    <div class="topnav">
        <a href="/main">Domů</a>
        <a class="active" href="/galerie">Galerie</a>
        <a href="/dino">Motivace</a>
        <a href="/upload">Upload</a>
        <a href="/kok">Seznam Uživatelů</a>
        <a style="float: right;" href="/profile"><%= loggedInUserName %></a>
    </div>
    <div class="image-container">
        <% for (let i = 0; i < images.length; i++) { %>
            <div class="image">
                <p style="color: white;">Uploader: <%= images[i].username %></p>
                <img src="data:image/jpeg;base64, <%= images[i].test.toString('base64') %>"
                    alt="Obrázek <%= i + 1 %>">
                <div class="like-button" data-image-index="<%= i %>">
                    <span class="like-counter">0</span>
                    <span class="heart-icon">&#x2764;</span>
                </div>
            </div>
        <% } %>
    </div>
</body>
<script>
    function getLikesFromStorage() {
        const storedLikes = localStorage.getItem('likes');
        return storedLikes ? JSON.parse(storedLikes) : {};
    }

    function updateLikesUI() {
        const likesData = getLikesFromStorage();
        const likeButtons = document.querySelectorAll('.like-button');

        likeButtons.forEach(button => {
            const imageIndex = button.getAttribute('data-image-index');
            const { liked, count } = likesData[imageIndex] || { liked: false, count: 0 };

            if (liked) {
                button.classList.add('liked');
            } else {
                button.classList.remove('liked');
            }

            button.querySelector('.like-counter').innerText = count;
        });
    }

    function toggleLike(event) {
        const likeButton = event.currentTarget;
        const imageIndex = likeButton.getAttribute('data-image-index');
        const likesData = getLikesFromStorage();
        let { liked, count } = likesData[imageIndex] || { liked: false, count: 0 };

        if (!liked) {
            liked = true;
            count++;
            likeButton.classList.add('liked');
        } else {
            liked = false;
            count--;
            likeButton.classList.remove('liked');
        }

        likeButton.querySelector('.like-counter').innerText = count;

        likesData[imageIndex] = { liked, count };
        localStorage.setItem('likes', JSON.stringify(likesData));
    }

    const likeButtons = document.querySelectorAll('.like-button');
    likeButtons.forEach(button => {
        button.addEventListener('click', toggleLike);
    });

    updateLikesUI();
</script>

</html>

</html>